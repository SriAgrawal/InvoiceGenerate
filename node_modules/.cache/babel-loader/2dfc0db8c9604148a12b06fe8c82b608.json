{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');\n\nvar _extends = require('@babel/runtime/helpers/extends');\n\nvar _regeneratorRuntime = require('@babel/runtime/regenerator');\n\nvar _objectWithoutPropertiesLoose = require('@babel/runtime/helpers/objectWithoutPropertiesLoose');\n\nrequire('is-url');\n\nvar fetch = require('cross-fetch');\n\nvar fontkit = require('@react-pdf/fontkit');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar _asyncToGenerator__default = /*#__PURE__*/_interopDefaultLegacy(_asyncToGenerator);\n\nvar _extends__default = /*#__PURE__*/_interopDefaultLegacy(_extends);\n\nvar _regeneratorRuntime__default = /*#__PURE__*/_interopDefaultLegacy(_regeneratorRuntime);\n\nvar _objectWithoutPropertiesLoose__default = /*#__PURE__*/_interopDefaultLegacy(_objectWithoutPropertiesLoose);\n\nvar fetch__default = /*#__PURE__*/_interopDefaultLegacy(fetch);\n\nvar fontkit__default = /*#__PURE__*/_interopDefaultLegacy(fontkit);\n\nvar _excluded = [\"src\", \"fontWeight\", \"fontStyle\"];\nvar FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900\n};\n\nvar fetchFont = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator__default[\"default\"]( /*#__PURE__*/_regeneratorRuntime__default[\"default\"].mark(function _callee(src, options) {\n    var response, buffer;\n    return _regeneratorRuntime__default[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch__default[\"default\"](src, options);\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.buffer ? response.buffer() : response.arrayBuffer();\n\n          case 5:\n            buffer = _context.sent;\n            return _context.abrupt(\"return\", buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchFont(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar isDataUrl = function isDataUrl(dataUrl) {\n  var header = dataUrl.split(',')[0];\n  var hasDataPrefix = header.substring(0, 5) === 'data:';\n  var hasBase64Prefix = header.split(';')[1] === 'base64';\n  return hasDataPrefix && hasBase64Prefix;\n};\n\nvar resolveFontWeight = function resolveFontWeight(value) {\n  return typeof value === 'string' ? FONT_WEIGHTS[value] : value;\n};\n\nvar sortByFontWeight = function sortByFontWeight(a, b) {\n  return a.fontWeight - b.fontWeight;\n};\n\nvar FontSource = /*#__PURE__*/function () {\n  function FontSource(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = fontWeight || 400;\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  var _proto = FontSource.prototype;\n\n  _proto.load = /*#__PURE__*/function () {\n    var _load = _asyncToGenerator__default[\"default\"]( /*#__PURE__*/_regeneratorRuntime__default[\"default\"].mark(function _callee2() {\n      var _this = this;\n\n      var postscriptName, _this$options, headers, body, _this$options$method, method, data;\n\n      return _regeneratorRuntime__default[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.loading = true;\n              postscriptName = this.options.postscriptName;\n\n              if (!isDataUrl(this.src)) {\n                _context2.next = 6;\n                break;\n              }\n\n              this.data = fontkit__default[\"default\"].create(Buffer.from(this.src.split(',')[1], 'base64'), postscriptName);\n              _context2.next = 17;\n              break;\n\n            case 6:\n              _this$options = this.options, headers = _this$options.headers, body = _this$options.body, _this$options$method = _this$options.method, method = _this$options$method === void 0 ? 'GET' : _this$options$method;\n              _context2.next = 10;\n              return fetchFont(this.src, {\n                method: method,\n                body: body,\n                headers: headers\n              });\n\n            case 10:\n              data = _context2.sent;\n              this.data = fontkit__default[\"default\"].create(data, postscriptName);\n              _context2.next = 17;\n              break;\n\n            case 14:\n              _context2.next = 16;\n              return new Promise(function (resolve, reject) {\n                return fontkit__default[\"default\"].open(_this.src, postscriptName, function (err, data) {\n                  return err ? reject(err) : resolve(data);\n                });\n              });\n\n            case 16:\n              this.data = _context2.sent;\n\n            case 17:\n              this.loading = false;\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function load() {\n      return _load.apply(this, arguments);\n    }\n\n    return load;\n  }();\n\n  return FontSource;\n}();\n\nvar Font = /*#__PURE__*/function () {\n  Font.create = function create(family) {\n    return new Font(family);\n  };\n\n  function Font(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  var _proto2 = Font.prototype;\n\n  _proto2.register = function register(_ref2) {\n    var src = _ref2.src,\n        fontWeight = _ref2.fontWeight,\n        fontStyle = _ref2.fontStyle,\n        options = _objectWithoutPropertiesLoose__default[\"default\"](_ref2, _excluded);\n\n    var numericFontWeight = resolveFontWeight(fontWeight);\n    this.sources.push(new FontSource(src, this.family, fontStyle, numericFontWeight, options));\n  };\n\n  _proto2.resolve = function resolve(descriptor) {\n    var _descriptor$fontWeigh = descriptor.fontWeight,\n        fontWeight = _descriptor$fontWeigh === void 0 ? 400 : _descriptor$fontWeigh,\n        _descriptor$fontStyle = descriptor.fontStyle,\n        fontStyle = _descriptor$fontStyle === void 0 ? 'normal' : _descriptor$fontStyle;\n    var styleSources = this.sources.filter(function (s) {\n      return s.fontStyle === fontStyle;\n    }); // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n\n    var exactFit = styleSources.find(function (s) {\n      return s.fontWeight === fontWeight;\n    });\n    if (exactFit) return exactFit;\n    var res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      var leftOffset = styleSources.filter(function (s) {\n        return s.fontWeight <= fontWeight;\n      });\n      var rightOffset = styleSources.filter(function (s) {\n        return s.fontWeight > 500;\n      });\n      var fit = styleSources.filter(function (s) {\n        return s.fontWeight >= fontWeight && s.fontWeight < 500;\n      });\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    var lt = styleSources.filter(function (s) {\n      return s.fontWeight < fontWeight;\n    }).sort(sortByFontWeight);\n    var gt = styleSources.filter(function (s) {\n      return s.fontWeight > fontWeight;\n    }).sort(sortByFontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\"Could not resolve font for \" + this.family + \", fontWeight \" + fontWeight);\n    }\n\n    return res;\n  };\n\n  return Font;\n}();\n\nvar standard = ['Courier', 'Courier-Bold', 'Courier-Oblique', 'Helvetica', 'Helvetica-Bold', 'Helvetica-Oblique', 'Times-Roman', 'Times-Bold', 'Times-Italic'];\n\nfunction FontStore() {\n  var _this = this;\n\n  var fonts = {};\n  var emojiSource = null;\n  var hyphenationCallback = null;\n\n  this.register = function (data) {\n    var family = data.family;\n\n    if (!fonts[family]) {\n      fonts[family] = Font.create(family);\n    } // Bulk loading\n\n\n    if (data.fonts) {\n      for (var i = 0; i < data.fonts.length; i += 1) {\n        fonts[family].register(_extends__default[\"default\"]({\n          family: family\n        }, data.fonts[i]));\n      }\n    } else {\n      fonts[family].register(data);\n    }\n  };\n\n  this.registerEmojiSource = function (_ref) {\n    var url = _ref.url,\n        _ref$format = _ref.format,\n        format = _ref$format === void 0 ? 'png' : _ref$format;\n    emojiSource = {\n      url: url,\n      format: format\n    };\n  };\n\n  this.registerHyphenationCallback = function (callback) {\n    hyphenationCallback = callback;\n  };\n\n  this.getFont = function (descriptor) {\n    var fontFamily = descriptor.fontFamily;\n    var isStandard = standard.includes(fontFamily);\n    if (isStandard) return null;\n\n    if (!fonts[fontFamily]) {\n      throw new Error(\"Font family not registered: \" + fontFamily + \". Please register it calling Font.register() method.\");\n    }\n\n    return fonts[fontFamily].resolve(descriptor);\n  };\n\n  this.load = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator__default[\"default\"]( /*#__PURE__*/_regeneratorRuntime__default[\"default\"].mark(function _callee(descriptor) {\n      var fontFamily, isStandard, f;\n      return _regeneratorRuntime__default[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              fontFamily = descriptor.fontFamily;\n              isStandard = standard.includes(fontFamily);\n\n              if (!isStandard) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              f = _this.getFont(descriptor); // We cache the font to avoid fetching it many times\n\n              if (!(!f.data && !f.loading)) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 8;\n              return f.load();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  this.reset = function () {\n    var keys = Object.keys(fonts);\n\n    for (var i = 0; i < keys.length; i += 1) {\n      var key = keys[i];\n      fonts[key].data = null;\n    }\n  };\n\n  this.clear = function () {\n    fonts = {};\n  };\n\n  this.getRegisteredFonts = function () {\n    return fonts;\n  };\n\n  this.getEmojiSource = function () {\n    return emojiSource;\n  };\n\n  this.getHyphenationCallback = function () {\n    return hyphenationCallback;\n  };\n\n  this.getRegisteredFontFamilies = function () {\n    return Object.keys(fonts);\n  };\n}\n\nexports[\"default\"] = FontStore;","map":{"version":3,"sources":["../src/font.js","../src/standard.js","../src/index.js"],"names":["FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","fetchFont","response","fetch","buffer","Buffer","isDataUrl","header","dataUrl","hasDataPrefix","hasBase64Prefix","resolveFontWeight","sortByFontWeight","a","b","FontSource","fontStyle","fontWeight","load","postscriptName","fontkit","headers","body","method","data","err","reject","resolve","Font","create","register","src","options","numericFontWeight","descriptor","styleSources","s","exactFit","leftOffset","rightOffset","fit","res","lt","gt","fonts","emojiSource","hyphenationCallback","family","font","i","url","format","fontFamily","isStandard","standard","f","keys","Object","key"],"mappings":"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","sourcesContent":["/* eslint-disable max-classes-per-file */\n\nimport isUrl from 'is-url';\nimport fetch from 'cross-fetch';\nimport fontkit from '@react-pdf/fontkit';\n\nconst FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isDataUrl = dataUrl => {\n  const header = dataUrl.split(',')[0];\n  const hasDataPrefix = header.substring(0, 5) === 'data:';\n  const hasBase64Prefix = header.split(';')[1] === 'base64';\n\n  return hasDataPrefix && hasBase64Prefix;\n};\n\nconst resolveFontWeight = value => {\n  return typeof value === 'string' ? FONT_WEIGHTS[value] : value;\n};\n\nconst sortByFontWeight = (a, b) => a.fontWeight - b.fontWeight;\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = fontWeight || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    const { postscriptName } = this.options;\n\n    if (isDataUrl(this.src)) {\n      this.data = fontkit.create(\n        Buffer.from(this.src.split(',')[1], 'base64'),\n        postscriptName,\n      );\n    } else if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data, postscriptName);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, postscriptName, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    const numericFontWeight = resolveFontWeight(fontWeight);\n\n    this.sources.push(\n      new FontSource(src, this.family, fontStyle, numericFontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources\n      .filter(s => s.fontWeight < fontWeight)\n      .sort(sortByFontWeight);\n    const gt = styleSources\n      .filter(s => s.fontWeight > fontWeight)\n      .sort(sortByFontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${this.family}, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import font from './font';\nimport standard from './standard';\n\nfunction FontStore() {\n  let fonts = {};\n\n  let emojiSource = null;\n\n  let hyphenationCallback = null;\n\n  this.register = data => {\n    const { family } = data;\n\n    if (!fonts[family]) {\n      fonts[family] = font.create(family);\n    }\n\n    // Bulk loading\n    if (data.fonts) {\n      for (let i = 0; i < data.fonts.length; i += 1) {\n        fonts[family].register({ family, ...data.fonts[i] });\n      }\n    } else {\n      fonts[family].register(data);\n    }\n  };\n\n  this.registerEmojiSource = ({ url, format = 'png' }) => {\n    emojiSource = { url, format };\n  };\n\n  this.registerHyphenationCallback = callback => {\n    hyphenationCallback = callback;\n  };\n\n  this.getFont = descriptor => {\n    const { fontFamily } = descriptor;\n    const isStandard = standard.includes(fontFamily);\n\n    if (isStandard) return null;\n\n    if (!fonts[fontFamily]) {\n      throw new Error(\n        `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n      );\n    }\n\n    return fonts[fontFamily].resolve(descriptor);\n  };\n\n  this.load = async descriptor => {\n    const { fontFamily } = descriptor;\n    const isStandard = standard.includes(fontFamily);\n\n    if (isStandard) return;\n\n    const f = this.getFont(descriptor);\n\n    // We cache the font to avoid fetching it many times\n    if (!f.data && !f.loading) {\n      await f.load();\n    }\n  };\n\n  this.reset = () => {\n    const keys = Object.keys(fonts);\n\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      fonts[key].data = null;\n    }\n  };\n\n  this.clear = () => {\n    fonts = {};\n  };\n\n  this.getRegisteredFonts = () => fonts;\n\n  this.getEmojiSource = () => emojiSource;\n\n  this.getHyphenationCallback = () => hyphenationCallback;\n\n  this.getRegisteredFontFamilies = () => Object.keys(fonts);\n}\n\nexport default FontStore;\n"]},"metadata":{},"sourceType":"script"}