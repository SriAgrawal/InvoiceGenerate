{"ast":null,"code":"var _jsxFileName = \"/Volumes/Work/Work/react-invoice-generator-master/src/components/EditableCalendarInput.tsx\";\nimport React from 'react';\nimport { Text } from '@react-pdf/renderer';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport compose from '../styles/compose';\n\nconst EditableCalendarInput = _ref => {\n  let {\n    className,\n    value,\n    selected,\n    onChange,\n    pdfMode\n  } = _ref;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, pdfMode ? /*#__PURE__*/React.createElement(Text, {\n    style: compose('span ' + (className ? className : '')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, value) : /*#__PURE__*/React.createElement(DatePicker, {\n    className: 'input ' + (className ? className : ''),\n    selected: selected,\n    onChange: onChange ? date => onChange(date) : date => null,\n    dateFormat: \"MMM dd, yyyy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default EditableCalendarInput;","map":{"version":3,"names":["React","Text","DatePicker","compose","EditableCalendarInput","className","value","selected","onChange","pdfMode","date"],"sources":["/Volumes/Work/Work/react-invoice-generator-master/src/components/EditableCalendarInput.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport { Text } from '@react-pdf/renderer'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport compose from '../styles/compose'\n\ninterface Props {\n  className?: string\n  value?: string\n  selected?: Date\n  onChange?: (date: Date | [Date, Date] | null) => void\n  pdfMode?: boolean\n}\n\nconst EditableCalendarInput: FC<Props> = ({ className, value, selected, onChange, pdfMode }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <DatePicker\n          className={'input ' + (className ? className : '')}\n          selected={selected}\n          onChange={onChange ? (date) => onChange(date) : (date) => null}\n          dateFormat=\"MMM dd, yyyy\"\n        />\n      )}\n    </>\n  )\n}\n\nexport default EditableCalendarInput\n"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAUA,MAAMC,qBAAgC,GAAG,QAAuD;EAAA,IAAtD;IAAEC,SAAF;IAAaC,KAAb;IAAoBC,QAApB;IAA8BC,QAA9B;IAAwCC;EAAxC,CAAsD;EAC9F,oBACE,0CACGA,OAAO,gBACN,oBAAC,IAAD;IAAM,KAAK,EAAEN,OAAO,CAAC,WAAWE,SAAS,GAAGA,SAAH,GAAe,EAAnC,CAAD,CAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA+DC,KAA/D,CADM,gBAGN,oBAAC,UAAD;IACE,SAAS,EAAE,YAAYD,SAAS,GAAGA,SAAH,GAAe,EAApC,CADb;IAEE,QAAQ,EAAEE,QAFZ;IAGE,QAAQ,EAAEC,QAAQ,GAAIE,IAAD,IAAUF,QAAQ,CAACE,IAAD,CAArB,GAA+BA,IAAD,IAAU,IAH5D;IAIE,UAAU,EAAC,cAJb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJJ,CADF;AAcD,CAfD;;AAiBA,eAAeN,qBAAf"},"metadata":{},"sourceType":"module"}