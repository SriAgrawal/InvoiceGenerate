{"ast":null,"code":"var _jsxFileName = \"/Volumes/Work/Work/react-invoice-generator-master/src/components/InvoicePage.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { initialInvoice, initialProductLine } from '../data/initialData';\nimport EditableInput from './EditableInput';\nimport EditableSelect from './EditableSelect';\nimport EditableTextarea from './EditableTextarea';\nimport EditableCalendarInput from './EditableCalendarInput';\nimport EditableFileImage from './EditableFileImage';\nimport countryList from '../data/countryList';\nimport Document from './Document';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport { Font } from '@react-pdf/renderer';\nimport Download from './DownloadPDF';\nimport format from 'date-fns/format';\nFont.register({\n  family: 'Nunito',\n  fonts: [{\n    src: 'https://fonts.gstatic.com/s/nunito/v12/XRXV3I6Li01BKofINeaE.ttf'\n  }, {\n    src: 'https://fonts.gstatic.com/s/nunito/v12/XRXW3I6Li01BKofA6sKUYevN.ttf',\n    fontWeight: 600\n  }]\n});\n\nconst InvoicePage = _ref => {\n  let {\n    data,\n    pdfMode\n  } = _ref;\n  const [invoice, setInvoice] = useState(data ? { ...data\n  } : { ...initialInvoice\n  });\n  const [subTotal, setSubTotal] = useState();\n  const [saleTax, setSaleTax] = useState();\n  const [Freight, setFreight] = useState();\n  const [Misc, setMisc] = useState();\n  const dateFormat = 'MMM dd, yyyy';\n  const invoiceDate = invoice.invoiceDate !== '' ? new Date(invoice.invoiceDate) : new Date();\n  const invoiceDueDate = invoice.invoiceDueDate !== '' ? new Date(invoice.invoiceDueDate) : new Date(invoiceDate.valueOf());\n\n  if (invoice.invoiceDueDate === '') {\n    invoiceDueDate.setDate(invoiceDueDate.getDate() + 30);\n  }\n\n  const handleChange = (name, value) => {\n    if (name !== 'productLines') {\n      const newInvoice = { ...invoice\n      };\n\n      if (name === 'logoWidth' && typeof value === 'number') {\n        newInvoice[name] = value;\n      } else if (name !== 'logoWidth' && typeof value === 'string') {\n        newInvoice[name] = value;\n      }\n\n      setInvoice(newInvoice);\n    }\n  };\n\n  const handleProductLineChange = (index, name, value) => {\n    const productLines = invoice.productLines.map((productLine, i) => {\n      if (i === index) {\n        const newProductLine = { ...productLine\n        };\n\n        if (name === 'description') {\n          newProductLine[name] = value;\n        } else {\n          if (value[value.length - 1] === '.' || value[value.length - 1] === '0' && value.includes('.')) {\n            newProductLine[name] = value;\n          } else {\n            const n = parseFloat(value);\n            newProductLine[name] = (n ? n : 0).toString();\n          }\n        }\n\n        return newProductLine;\n      }\n\n      return { ...productLine\n      };\n    });\n    setInvoice({ ...invoice,\n      productLines\n    });\n  };\n\n  const handleRemove = i => {\n    const productLines = invoice.productLines.filter((productLine, index) => index !== i);\n    setInvoice({ ...invoice,\n      productLines\n    });\n  };\n\n  const handleAdd = () => {\n    const productLines = [...invoice.productLines, { ...initialProductLine\n    }];\n    setInvoice({ ...invoice,\n      productLines\n    });\n  };\n\n  const calculateAmount = (quantity, rate) => {\n    const quantityNumber = parseFloat(quantity);\n    const rateNumber = parseFloat(rate);\n    const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0;\n    return amount.toFixed(2);\n  };\n\n  useEffect(() => {\n    let subTotal = 0;\n    invoice.productLines.forEach(productLine => {\n      const quantityNumber = parseFloat(productLine.quantity);\n      const rateNumber = parseFloat(productLine.rate);\n      const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0;\n      subTotal += amount;\n    });\n    setSubTotal(subTotal);\n  }, [invoice.productLines]);\n  useEffect(() => {\n    const match = invoice.taxLabel.match(/(\\d+)%/);\n    const taxRate = match ? parseFloat(match[1]) : 0;\n    const saleTax = subTotal ? subTotal * taxRate / 100 : 0;\n    const Freight = parseFloat(invoice.potlaVal);\n    const Misc = 20;\n    setSaleTax(saleTax);\n    setFreight(Freight);\n    setMisc(Misc);\n  }, [subTotal, invoice.taxLabel, invoice.freightLabel, invoice.miscLabel]);\n  return /*#__PURE__*/React.createElement(Document, {\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Page, {\n    className: \"invoice-wrapper\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, !pdfMode && /*#__PURE__*/React.createElement(Download, {\n    data: invoice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(View, {\n    className: \"flex\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    className: \"w-50\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EditableFileImage, {\n    className: \"logo\",\n    placeholder: \"Your Logo\",\n    value: invoice.logo,\n    width: invoice.logoWidth,\n    pdfMode: pdfMode,\n    onChangeImage: value => handleChange('logo', value),\n    onChangeWidth: value => handleChange('logoWidth', value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"fs-20 bold\",\n    placeholder: \"Your Company\",\n    value: invoice.companyName,\n    onChange: value => handleChange('companyName', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditableInput, {\n    placeholder: \"Your Name\",\n    value: invoice.name,\n    onChange: value => handleChange('name', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditableInput, {\n    placeholder: \"Company's Address\",\n    value: invoice.companyAddress,\n    onChange: value => handleChange('companyAddress', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditableInput, {\n    placeholder: \"City, State Zip\",\n    value: invoice.companyAddress2,\n    onChange: value => handleChange('companyAddress2', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditableSelect, {\n    options: countryList,\n    value: invoice.companyCountry,\n    onChange: value => handleChange('companyCountry', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    className: \"w-50\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"fs-45 right bold\",\n    placeholder: \"\\u0950\",\n    value: invoice.title,\n    onChange: value => handleChange('title', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(View, {\n    className: \"flex mt-40\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    className: \"w-55\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"bold dark mb-5\",\n    value: invoice.billTo,\n    onChange: value => handleChange('billTo', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditableInput, {\n    placeholder: \"Your Client's Name\",\n    value: invoice.clientName,\n    onChange: value => handleChange('clientName', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditableInput, {\n    placeholder: \"Client's Address\",\n    value: invoice.clientAddress,\n    onChange: value => handleChange('clientAddress', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditableInput, {\n    placeholder: \"City, State Zip\",\n    value: invoice.clientAddress2,\n    onChange: value => handleChange('clientAddress2', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditableSelect, {\n    options: countryList,\n    value: invoice.clientCountry,\n    onChange: value => handleChange('clientCountry', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    className: \"w-45\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    className: \"flex mb-5\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    className: \"w-40\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"bold\",\n    value: invoice.invoiceTitleLabel,\n    onChange: value => handleChange('invoiceTitleLabel', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    className: \"w-60\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    placeholder: \"INV-12\",\n    value: invoice.invoiceTitle,\n    onChange: value => handleChange('invoiceTitle', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(View, {\n    className: \"flex mb-5\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    className: \"w-40\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"bold\",\n    value: invoice.invoiceDateLabel,\n    onChange: value => handleChange('invoiceDateLabel', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    className: \"w-60\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditableCalendarInput, {\n    value: format(invoiceDate, dateFormat),\n    selected: invoiceDate,\n    onChange: date => handleChange('invoiceDate', date && !Array.isArray(date) ? format(date, dateFormat) : ''),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(View, {\n    className: \"flex mb-5\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    className: \"w-40\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"bold\",\n    value: invoice.invoiceDueDateLabel,\n    onChange: value => handleChange('invoiceDueDateLabel', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    className: \"w-60\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditableCalendarInput, {\n    value: format(invoiceDueDate, dateFormat),\n    selected: invoiceDueDate,\n    onChange: date => handleChange('invoiceDueDate', date && !Array.isArray(date) ? format(date, dateFormat) : ''),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(View, {\n    className: \"mt-30 bg-dark flex\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    className: \"w-48 p-4-8\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"white bold\",\n    value: invoice.productLineDescription,\n    onChange: value => handleChange('productLineDescription', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    className: \"w-17 p-4-8\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"white bold right\",\n    value: invoice.productLineQuantity,\n    onChange: value => handleChange('productLineQuantity', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    className: \"w-17 p-4-8\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"white bold right\",\n    value: invoice.productLineQuantityRate,\n    onChange: value => handleChange('productLineQuantityRate', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    className: \"w-18 p-4-8\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"white bold right\",\n    value: invoice.productLineQuantityAmount,\n    onChange: value => handleChange('productLineQuantityAmount', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }))), invoice.productLines.map((productLine, i) => {\n    return pdfMode && productLine.description === '' ? /*#__PURE__*/React.createElement(Text, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(View, {\n      key: i,\n      className: \"row flex\",\n      pdfMode: pdfMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      className: \"w-48 p-4-8 pb-10\",\n      pdfMode: pdfMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(EditableTextarea, {\n      className: \"dark\",\n      rows: 2,\n      placeholder: \"Enter item name/description\",\n      value: productLine.description,\n      onChange: value => handleProductLineChange(i, 'description', value),\n      pdfMode: pdfMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      className: \"w-17 p-4-8 pb-10\",\n      pdfMode: pdfMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(EditableInput, {\n      className: \"dark right\",\n      value: productLine.quantity,\n      onChange: value => handleProductLineChange(i, 'quantity', value),\n      pdfMode: pdfMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      className: \"w-17 p-4-8 pb-10\",\n      pdfMode: pdfMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(EditableInput, {\n      className: \"dark right\",\n      value: productLine.rate,\n      onChange: value => handleProductLineChange(i, 'rate', value),\n      pdfMode: pdfMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(View, {\n      className: \"w-18 p-4-8 pb-10\",\n      pdfMode: pdfMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      className: \"dark right\",\n      pdfMode: pdfMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }\n    }, calculateAmount(productLine.quantity, productLine.rate))), !pdfMode && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"link row__remove\",\n      \"aria-label\": \"Remove Row\",\n      title: \"Remove Row\",\n      onClick: () => handleRemove(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon icon-remove bg-red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 19\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(View, {\n    className: \"flex\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    className: \"w-50 mt-10\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }, !pdfMode && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"link\",\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon icon-add bg-green mr-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 17\n    }\n  }), \"Add Line Item\")), /*#__PURE__*/React.createElement(View, {\n    className: \"w-50 mt-20\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    className: \"flex\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    className: \"w-50 p-5\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    value: invoice.subTotalLabel,\n    onChange: value => handleChange('subTotalLabel', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    className: \"w-50 p-5\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    className: \"right bold dark\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 17\n    }\n  }, subTotal === null || subTotal === void 0 ? void 0 : subTotal.toFixed(2)))), /*#__PURE__*/React.createElement(View, {\n    className: \"flex\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    className: \"w-50 p-5\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    value: invoice.taxLabel,\n    onChange: value => handleChange('taxLabel', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    className: \"w-50 p-5\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"right bold dark\",\n    value: invoice.potlaVal,\n    onChange: value => handleChange('potlaVal', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(View, {\n    className: \"flex\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    className: \"w-50 p-5\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    value: invoice.freightLabel,\n    onChange: value => handleChange('taxLabel', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    className: \"w-50 p-5\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    className: \"right bold dark\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 17\n    }\n  }, Freight === null || Freight === void 0 ? void 0 : Freight.toFixed(2)))), /*#__PURE__*/React.createElement(View, {\n    className: \"flex\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    className: \"w-50 p-5\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    value: invoice.miscLabel,\n    onChange: value => handleChange('taxLabel', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    className: \"w-50 p-5\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    className: \"right bold dark\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 17\n    }\n  }, Misc === null || Misc === void 0 ? void 0 : Misc.toFixed(2)))), /*#__PURE__*/React.createElement(View, {\n    className: \"flex bg-gray p-5\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    className: \"w-50 p-5\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"bold\",\n    value: invoice.totalLabel,\n    onChange: value => handleChange('totalLabel', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    className: \"w-50 p-5 flex\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"dark bold right ml-30\",\n    value: invoice.currency,\n    onChange: value => handleChange('currency', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    className: \"right bold dark w-auto\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 17\n    }\n  }, (typeof subTotal !== 'undefined' && typeof saleTax !== 'undefined' && typeof Freight !== 'undefined' && typeof Misc !== 'undefined' ? subTotal + saleTax + Freight + Misc : 0).toFixed(2)))))), /*#__PURE__*/React.createElement(View, {\n    className: \"mt-20\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"bold w-100\",\n    value: invoice.notesLabel,\n    onChange: value => handleChange('notesLabel', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditableTextarea, {\n    className: \"w-100\",\n    rows: 2,\n    value: invoice.notes,\n    onChange: value => handleChange('notes', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    className: \"mt-20\",\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditableInput, {\n    className: \"bold w-100\",\n    value: invoice.termLabel,\n    onChange: value => handleChange('termLabel', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditableTextarea, {\n    className: \"w-100\",\n    rows: 2,\n    value: invoice.term,\n    onChange: value => handleChange('term', value),\n    pdfMode: pdfMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default InvoicePage;","map":{"version":3,"names":["React","useState","useEffect","initialInvoice","initialProductLine","EditableInput","EditableSelect","EditableTextarea","EditableCalendarInput","EditableFileImage","countryList","Document","Page","View","Text","Font","Download","format","register","family","fonts","src","fontWeight","InvoicePage","data","pdfMode","invoice","setInvoice","subTotal","setSubTotal","saleTax","setSaleTax","Freight","setFreight","Misc","setMisc","dateFormat","invoiceDate","Date","invoiceDueDate","valueOf","setDate","getDate","handleChange","name","value","newInvoice","handleProductLineChange","index","productLines","map","productLine","i","newProductLine","length","includes","n","parseFloat","toString","handleRemove","filter","handleAdd","calculateAmount","quantity","rate","quantityNumber","rateNumber","amount","toFixed","forEach","match","taxLabel","taxRate","potlaVal","freightLabel","miscLabel","logo","logoWidth","companyName","companyAddress","companyAddress2","companyCountry","title","billTo","clientName","clientAddress","clientAddress2","clientCountry","invoiceTitleLabel","invoiceTitle","invoiceDateLabel","date","Array","isArray","invoiceDueDateLabel","productLineDescription","productLineQuantity","productLineQuantityRate","productLineQuantityAmount","description","subTotalLabel","totalLabel","currency","notesLabel","notes","termLabel","term"],"sources":["/Volumes/Work/Work/react-invoice-generator-master/src/components/InvoicePage.tsx"],"sourcesContent":["import React, { FC, useState, useEffect } from 'react'\nimport { Invoice, ProductLine } from '../data/types'\nimport { initialInvoice, initialProductLine } from '../data/initialData'\nimport EditableInput from './EditableInput'\nimport EditableSelect from './EditableSelect'\nimport EditableTextarea from './EditableTextarea'\nimport EditableCalendarInput from './EditableCalendarInput'\nimport EditableFileImage from './EditableFileImage'\nimport countryList from '../data/countryList'\nimport Document from './Document'\nimport Page from './Page'\nimport View from './View'\nimport Text from './Text'\nimport { Font } from '@react-pdf/renderer'\nimport Download from './DownloadPDF'\nimport format from 'date-fns/format'\n\nFont.register({\n  family: 'Nunito',\n  fonts: [\n    { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXV3I6Li01BKofINeaE.ttf' },\n    { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXW3I6Li01BKofA6sKUYevN.ttf', fontWeight: 600 },\n  ],\n})\n\ninterface Props {\n  data?: Invoice\n  pdfMode?: boolean\n}\n\nconst InvoicePage: FC<Props> = ({ data, pdfMode }) => {\n  const [invoice, setInvoice] = useState<Invoice>(data ? { ...data } : { ...initialInvoice })\n  const [subTotal, setSubTotal] = useState<number>()\n  const [saleTax, setSaleTax] = useState<number>()\n  const [Freight, setFreight] = useState<number>()\n  const [Misc, setMisc] = useState<number>()\n  \n  const dateFormat = 'MMM dd, yyyy'\n  const invoiceDate = invoice.invoiceDate !== '' ? new Date(invoice.invoiceDate) : new Date()\n  const invoiceDueDate =\n    invoice.invoiceDueDate !== ''\n      ? new Date(invoice.invoiceDueDate)\n      : new Date(invoiceDate.valueOf())\n\n  if (invoice.invoiceDueDate === '') {\n    invoiceDueDate.setDate(invoiceDueDate.getDate() + 30)\n  }\n\n  const handleChange = (name: keyof Invoice, value: string | number) => {\n    if (name !== 'productLines') {\n      const newInvoice = { ...invoice }\n\n      if (name === 'logoWidth' && typeof value === 'number') {\n        newInvoice[name] = value\n      } else if (name !== 'logoWidth' && typeof value === 'string') {\n        newInvoice[name] = value\n      }\n\n      setInvoice(newInvoice)\n    }\n  }\n\n  const handleProductLineChange = (index: number, name: keyof ProductLine, value: string) => {\n    const productLines = invoice.productLines.map((productLine, i) => {\n      if (i === index) {\n        const newProductLine = { ...productLine }\n\n        if (name === 'description') {\n          newProductLine[name] = value\n        } else {\n          if (\n            value[value.length - 1] === '.' ||\n            (value[value.length - 1] === '0' && value.includes('.'))\n          ) {\n            newProductLine[name] = value\n          } else {\n            const n = parseFloat(value)\n\n            newProductLine[name] = (n ? n : 0).toString()\n          }\n        }\n\n        return newProductLine\n      }\n\n      return { ...productLine }\n    })\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const handleRemove = (i: number) => {\n    const productLines = invoice.productLines.filter((productLine, index) => index !== i)\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const handleAdd = () => {\n    const productLines = [...invoice.productLines, { ...initialProductLine }]\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const calculateAmount = (quantity: string, rate: string) => {\n    const quantityNumber = parseFloat(quantity)\n    const rateNumber = parseFloat(rate)\n    const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0\n\n    return amount.toFixed(2)\n  }\n\n  useEffect(() => {\n    let subTotal = 0\n\n    invoice.productLines.forEach((productLine) => {\n      const quantityNumber = parseFloat(productLine.quantity)\n      const rateNumber = parseFloat(productLine.rate)\n      const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0\n\n      subTotal += amount\n    })\n\n    setSubTotal(subTotal)\n  }, [invoice.productLines])\n\n  useEffect(() => {\n    const match = invoice.taxLabel.match(/(\\d+)%/)\n    const taxRate = match ? parseFloat(match[1]) : 0\n    const saleTax = subTotal ? (subTotal * taxRate) / 100 : 0\n    const Freight = parseFloat(invoice.potlaVal)\n    const Misc = 20\n    setSaleTax(saleTax)\n    setFreight(Freight)\n    setMisc(Misc)\n  }, [subTotal, invoice.taxLabel,invoice.freightLabel,invoice.miscLabel])\n\n  return (\n    <Document pdfMode={pdfMode}>\n      <Page className=\"invoice-wrapper\" pdfMode={pdfMode}>\n        {!pdfMode && <Download data={invoice} />}\n\n        <View className=\"flex\" pdfMode={pdfMode}>\n          <View className=\"w-50\" pdfMode={pdfMode}>\n            <EditableFileImage\n              className=\"logo\"\n              placeholder=\"Your Logo\"\n              value={invoice.logo}\n              width={invoice.logoWidth}\n              pdfMode={pdfMode}\n              onChangeImage={(value) => handleChange('logo', value)}\n              onChangeWidth={(value) => handleChange('logoWidth', value)}\n            />\n            <EditableInput\n              className=\"fs-20 bold\"\n              placeholder=\"Your Company\"\n              value={invoice.companyName}\n              onChange={(value) => handleChange('companyName', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Your Name\"\n              value={invoice.name}\n              onChange={(value) => handleChange('name', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Company's Address\"\n              value={invoice.companyAddress}\n              onChange={(value) => handleChange('companyAddress', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"City, State Zip\"\n              value={invoice.companyAddress2}\n              onChange={(value) => handleChange('companyAddress2', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableSelect\n              options={countryList}\n              value={invoice.companyCountry}\n              onChange={(value) => handleChange('companyCountry', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-50\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"fs-45 right bold\"\n              placeholder=\"ॐ\"\n              value={invoice.title}\n              onChange={(value) => handleChange('title', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n        </View>\n\n        <View className=\"flex mt-40\" pdfMode={pdfMode}>\n          <View className=\"w-55\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"bold dark mb-5\"\n              value={invoice.billTo}\n              onChange={(value) => handleChange('billTo', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Your Client's Name\"\n              value={invoice.clientName}\n              onChange={(value) => handleChange('clientName', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"Client's Address\"\n              value={invoice.clientAddress}\n              onChange={(value) => handleChange('clientAddress', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableInput\n              placeholder=\"City, State Zip\"\n              value={invoice.clientAddress2}\n              onChange={(value) => handleChange('clientAddress2', value)}\n              pdfMode={pdfMode}\n            />\n            <EditableSelect\n              options={countryList}\n              value={invoice.clientCountry}\n              onChange={(value) => handleChange('clientCountry', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-45\" pdfMode={pdfMode}>\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\n              <View className=\"w-40\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold\"\n                  value={invoice.invoiceTitleLabel}\n                  onChange={(value) => handleChange('invoiceTitleLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-60\" pdfMode={pdfMode}>\n                <EditableInput\n                  placeholder=\"INV-12\"\n                  value={invoice.invoiceTitle}\n                  onChange={(value) => handleChange('invoiceTitle', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\n              <View className=\"w-40\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold\"\n                  value={invoice.invoiceDateLabel}\n                  onChange={(value) => handleChange('invoiceDateLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-60\" pdfMode={pdfMode}>\n                <EditableCalendarInput\n                  value={format(invoiceDate, dateFormat)}\n                  selected={invoiceDate}\n                  onChange={(date) =>\n                    handleChange(\n                      'invoiceDate',\n                      date && !Array.isArray(date) ? format(date, dateFormat) : ''\n                    )\n                  }\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n            <View className=\"flex mb-5\" pdfMode={pdfMode}>\n              <View className=\"w-40\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold\"\n                  value={invoice.invoiceDueDateLabel}\n                  onChange={(value) => handleChange('invoiceDueDateLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-60\" pdfMode={pdfMode}>\n                <EditableCalendarInput\n                  value={format(invoiceDueDate, dateFormat)}\n                  selected={invoiceDueDate}\n                  onChange={(date) =>\n                    handleChange(\n                      'invoiceDueDate',\n                      date && !Array.isArray(date) ? format(date, dateFormat) : ''\n                    )\n                  }\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n          </View>\n        </View>\n\n        <View className=\"mt-30 bg-dark flex\" pdfMode={pdfMode}>\n          <View className=\"w-48 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold\"\n              value={invoice.productLineDescription}\n              onChange={(value) => handleChange('productLineDescription', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold right\"\n              value={invoice.productLineQuantity}\n              onChange={(value) => handleChange('productLineQuantity', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold right\"\n              value={invoice.productLineQuantityRate}\n              onChange={(value) => handleChange('productLineQuantityRate', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-18 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold right\"\n              value={invoice.productLineQuantityAmount}\n              onChange={(value) => handleChange('productLineQuantityAmount', value)}\n              pdfMode={pdfMode}\n            />\n          </View>\n        </View>\n\n        {invoice.productLines.map((productLine, i) => {\n          return pdfMode && productLine.description === '' ? (\n            <Text key={i}></Text>\n          ) : (\n            <View key={i} className=\"row flex\" pdfMode={pdfMode}>\n              <View className=\"w-48 p-4-8 pb-10\" pdfMode={pdfMode}>\n                <EditableTextarea\n                  className=\"dark\"\n                  rows={2}\n                  placeholder=\"Enter item name/description\"\n                  value={productLine.description}\n                  onChange={(value) => handleProductLineChange(i, 'description', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"dark right\"\n                  value={productLine.quantity}\n                  onChange={(value) => handleProductLineChange(i, 'quantity', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"dark right\"\n                  value={productLine.rate}\n                  onChange={(value) => handleProductLineChange(i, 'rate', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-18 p-4-8 pb-10\" pdfMode={pdfMode}>\n                <Text className=\"dark right\" pdfMode={pdfMode}>\n                  {calculateAmount(productLine.quantity, productLine.rate)}\n                </Text>\n              </View>\n              {!pdfMode && (\n                <button\n                  className=\"link row__remove\"\n                  aria-label=\"Remove Row\"\n                  title=\"Remove Row\"\n                  onClick={() => handleRemove(i)}\n                >\n                  <span className=\"icon icon-remove bg-red\"></span>\n                </button>\n              )}\n            </View>\n          )\n        })}\n\n        <View className=\"flex\" pdfMode={pdfMode}>\n          <View className=\"w-50 mt-10\" pdfMode={pdfMode}>\n            {!pdfMode && (\n              <button className=\"link\" onClick={handleAdd}>\n                <span className=\"icon icon-add bg-green mr-10\"></span>\n                Add Line Item\n              </button>\n            )}\n          </View>\n          <View className=\"w-50 mt-20\" pdfMode={pdfMode}>\n            <View className=\"flex\" pdfMode={pdfMode}>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <EditableInput\n                  value={invoice.subTotalLabel}\n                  onChange={(value) => handleChange('subTotalLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\n                  {subTotal?.toFixed(2)}\n                </Text>\n              </View>\n            </View>\n            <View className=\"flex\" pdfMode={pdfMode}>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <EditableInput\n                  value={invoice.taxLabel}\n                  onChange={(value) => handleChange('taxLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n              <EditableInput className=\"right bold dark\"\n                  value={invoice.potlaVal}\n                  onChange={(value) => handleChange('potlaVal', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n            <View className=\"flex\" pdfMode={pdfMode}>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <EditableInput\n                  value={invoice.freightLabel}\n                  onChange={(value) => handleChange('taxLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\n                  {Freight?.toFixed(2)}\n                </Text>\n              </View>\n            </View>\n            <View className=\"flex\" pdfMode={pdfMode}>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <EditableInput\n                  value={invoice.miscLabel}\n                  onChange={(value) => handleChange('taxLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\n                  {Misc?.toFixed(2)}\n                </Text>\n              </View>\n            </View>\n            <View className=\"flex bg-gray p-5\" pdfMode={pdfMode}>\n              <View className=\"w-50 p-5\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"bold\"\n                  value={invoice.totalLabel}\n                  onChange={(value) => handleChange('totalLabel', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50 p-5 flex\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"dark bold right ml-30\"\n                  value={invoice.currency}\n                  onChange={(value) => handleChange('currency', value)}\n                  pdfMode={pdfMode}\n                />\n                <Text className=\"right bold dark w-auto\" pdfMode={pdfMode}>\n                  {(typeof subTotal !== 'undefined' && typeof saleTax !== 'undefined' && typeof Freight !== 'undefined' && typeof Misc !== 'undefined'\n                    ? subTotal + saleTax + Freight + Misc\n                    : 0\n                  ).toFixed(2)}\n                </Text>\n              </View>\n            </View>\n          </View>\n        </View>\n\n        <View className=\"mt-20\" pdfMode={pdfMode}>\n          <EditableInput\n            className=\"bold w-100\"\n            value={invoice.notesLabel}\n            onChange={(value) => handleChange('notesLabel', value)}\n            pdfMode={pdfMode}\n          />\n          <EditableTextarea\n            className=\"w-100\"\n            rows={2}\n            value={invoice.notes}\n            onChange={(value) => handleChange('notes', value)}\n            pdfMode={pdfMode}\n          />\n        </View>\n        <View className=\"mt-20\" pdfMode={pdfMode}>\n          <EditableInput\n            className=\"bold w-100\"\n            value={invoice.termLabel}\n            onChange={(value) => handleChange('termLabel', value)}\n            pdfMode={pdfMode}\n          />\n          <EditableTextarea\n            className=\"w-100\"\n            rows={2}\n            value={invoice.term}\n            onChange={(value) => handleChange('term', value)}\n            pdfMode={pdfMode}\n          />\n        </View>\n      </Page>\n    </Document>\n  )\n}\n\nexport default InvoicePage\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}